//
//  AppDelegateExec.swift
//
//
//  Created by Hadi Dbouk on 23/11/2023.
//

import ArgumentParser
import Foundation
import SwiftSyntax
import SwiftSyntaxBuilder

@main
struct AppDelegateExec: ParsableCommand {
	@Option(help: "All the files paths in the specific target.")
	var files: String

	@Option(help: "The path where the generated AppDelegate will be created")
	var outputPath: String

	mutating func run() throws {
		try Self.run(files: files, outputPath: outputPath)
	}
}

extension AppDelegateExec {
	static func run(files: String, outputPath: String) throws {
		guard
			let filesData = files.data(using: .utf8),
			let filesArray = try? JSONDecoder().decode([String].self, from: filesData)
		else {
			return
		}

		let appServices = try filesArray
			.flatMap { filePath in
				try ApplicationServiceFinder.find(in: filePath)
			}

		let header = Trivia(stringLiteral:
		  """
		  //
		  // This file is generated by FueledBuildPlugin ğŸ¤–
		  // DO NOT MODIFY.
		  //
		  \n
		  """
		)

		let sourceFileSyntax = SourceFileSyntax(
			leadingTrivia: header,
			statements: CodeBlockItemListSyntax {
				ImportDeclSyntax(
					path: ImportPathComponentListSyntax([
						ImportPathComponentSyntax(
							name: .identifier("UIKit")
						)
					])
				)

				AppDelegateDeclSyntax.generate(appServices: appServices)
			}
		)
			.formatted()

		let description = sourceFileSyntax.description
		if outputPath.isEmpty {
			print("\n\nğŸš¨ğŸš¨ğŸš¨ GENERATED AppDelegate.swift ğŸš¨ğŸš¨ğŸš¨\n\n")
			print(description)
			print("\n\nğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§ğŸš§\n\n")
		} else {
			FileManager.default.createFile(atPath: outputPath, contents: description.data(using: .utf8))
		}
	}
}
